package com.healthtree.service.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.healthtree.dao.MyLoveDao;
import com.healthtree.dao.PushMessageDao;
import com.healthtree.dao.RemindDao;
import com.healthtree.dao.UserInfoDao;
import com.healthtree.entity.MyLove;
import com.healthtree.entity.Remind;
import com.healthtree.entity.UserInfo;
import com.healthtree.service.RemindService;
import com.healthtree.util.xmpp.PushMessageTypeEnum;

@Service("remindService")
public class RemindServiceImpl implements RemindService {

	@Autowired
	private RemindDao remindDao;
	@Autowired
	private MyLoveDao myLoveDao;
	@Autowired
	private UserInfoDao userInfoDao;
	@Autowired
	private PushMessageDao pushMessageDao;

	public Serializable create(Remind remind) {
		Long userId = remind.getTid();
		setPushMsg(userId);
		return remindDao.save(remind);
	}

	public void edit(Remind remind) {
		Long userId = remind.getTid();
		UserInfo userInfo = userInfoDao.findByUserId(userId);
		if (userInfo != null)
			userInfoDao.updateRemindVersion(userInfo);
		setPushMsg(userId);
		remindDao.saveOrUpdate(remind);
	}

	public void remove(Long rId) {
		Remind remind = remindDao.get(Remind.class, rId);
		Long userId = remind.getTid();
		UserInfo userInfo = userInfoDao.findByUserId(userId);
		if (userInfo != null)
			userInfoDao.updateRemindVersion(userInfo);
		setPushMsg(userId);

		remindDao.delete(remind);
	}

	public List<Remind> findAll(Long userid) {
		return remindDao.findAll(userid);
	}

	public Remind findById(Long rId) {
		return remindDao.get(Remind.class, rId);
	}

	private void setPushMsg(Long userId) {
		List<MyLove> loveMes = myLoveDao.findLoveMeAndRightGt(userId);
		List<PushMessage> pushMessages = new ArrayList<PushMessage>();
		String[] objects = new String[] { userId.toString() };
		String uuid = UUID.randomUUID().toString();
		for (MyLove myLove : loveMes) {
			Long recvuid = myLove.getUserInfoByUserid().getId();
			PushMessage pushMessage = pushMessageDao.getPushMessage(
					PushMessageTypeEnum.MSGID58, objects, recvuid, uuid);
			pushMessages.add(pushMessage);
		}
		PushMessage mePushMessage = pushMessageDao.getPushMessage(
				PushMessageTypeEnum.MSGID58, objects, userId, uuid);
		pushMessages.add(mePushMessage);
		for (PushMessage pushMessage : pushMessages) {
			pushMessageDao.start(pushMessage);
		}
	}
}
